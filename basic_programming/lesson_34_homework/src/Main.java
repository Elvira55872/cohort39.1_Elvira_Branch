import java.util.Stack;

/**
 * Описание
 * Разработайте программу на Java для проверки правильности скобочной последовательности.
 * Правильная скобочная последовательность должна удовлетворять следующим критериям:
 * <p>
 * Каждой открывающей скобке ((, [, {) должна соответствовать закрывающая скобка того же типа (), ], }).
 * Закрывающая скобка должна следовать после своей открывающей пары.
 * Скобки должны быть правильно вложены друг в друга.
 * <p>
 * Примеры
 * Вход: ( [ ] { } ) Вывод: true
 * Вход: [(]) Вывод: false
 * Вход: {[( )]} Вывод: true
 * Вход: {[} Вывод: false
 * <p>
 * Реализация
 * Используйте стек для отслеживания открывающих скобок. При обходе строки, помещайте в стек все открывающие скобки.
 * <p>
 * При встрече закрывающей скобки проверьте, соответствует ли она верхнему элементу стека (последней открывающей скобке).
 * Если соответствует, извлеките элемент из стека. В противном случае, последовательность скобок неверная.
 * После обработки всей строки, если стек пуст, последовательность верная. Если в стеке остались элементы,
 * последовательность неверная.
 * <p>
 * <p>
 * <p>
 * Дополнительное задание
 * Реализуйте чтение входных данных из файла и вывод результата в другой файл,
 * чтобы попрактиковаться в работе с файловым вводом/выводом в Java.
 * <p>
 * <p>
 * <p>
 * ПОДСКАЗКИ
 * push() - вставить элемент в стек.
 * pop() - удалить элемент из стека.
 * peek() - возвращает верхний элемент стека.
 * isEmpty() - возвращает true, если стек пуст, иначе false.
 * size() - возвращает размер стека.
 */

public class Main {
    public static boolean bracketsChecker(String str) {
        Stack<String> brackets = new Stack<>();

        if (str.contains("(")) {
            brackets.push("(");
            if (str.contains(")")) {
                if (brackets.peek().equals("(")) {
                    brackets.pop();
                }
            }
        }
        //"[(])"
        if (str.contains("[")) {
            brackets.push("[");

            if (str.contains("]")) {
                if (brackets.peek().equals("[")) {
                    brackets.pop();
                }
            }
        }

        if (str.contains("{")) {
            brackets.push("{");

            if (str.contains("}")) {
                if (brackets.peek().equals("{")) {
                    brackets.pop();
                }
            }
        }


        System.out.println(brackets.isEmpty());
        return brackets.isEmpty();
    }

    public static void main(String[] args) {
        bracketsChecker("( [ ] { } )");
        bracketsChecker("[(])");
        bracketsChecker("{[( )]}");
        bracketsChecker("{[}");
    }
}
